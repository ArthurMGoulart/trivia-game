{"ast":null,"code":"import { REQUEST_TOKEN, GET_TOKEN_SUCESS, GET_TOKEN_FAIL, VALID_LOGIN, SET_CONFIGS } from '../actions';\nconst initialState = {\n  token: '',\n  error: '',\n  isLoading: false,\n  player: {\n    name: '',\n    gravatarEmail: ''\n  },\n  configs: {\n    category: '0',\n    difficulty: '0',\n    type: '0'\n  }\n};\n\nfunction game() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REQUEST_TOKEN:\n      return { ...state,\n        isLoading: true\n      };\n\n    case GET_TOKEN_SUCESS:\n      return { ...state,\n        token: action.token,\n        isLoading: false\n      };\n\n    case GET_TOKEN_FAIL:\n      return { ...state,\n        error: action.error,\n        isLoading: false\n      };\n\n    case VALID_LOGIN:\n      return { ...state,\n        player: { ...state.player,\n          name: action.name,\n          gravatarEmail: action.email\n        }\n      };\n\n    case SET_CONFIGS:\n      return { ...state,\n        configs: action.configs\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default game;","map":{"version":3,"sources":["/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/src/redux/reducers/game.js"],"names":["REQUEST_TOKEN","GET_TOKEN_SUCESS","GET_TOKEN_FAIL","VALID_LOGIN","SET_CONFIGS","initialState","token","error","isLoading","player","name","gravatarEmail","configs","category","difficulty","type","game","state","action","email"],"mappings":"AAAA,SAASA,aAAT,EACEC,gBADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,WAJF,QAIqB,YAJrB;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAE,EADA;AAENC,IAAAA,aAAa,EAAE;AAFT,GAJW;AAQnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,GADH;AAEPC,IAAAA,UAAU,EAAE,GAFL;AAGPC,IAAAA,IAAI,EAAE;AAHC;AARU,CAArB;;AAeA,SAASC,IAAT,GAA4C;AAAA,MAA9BC,KAA8B,uEAAtBZ,YAAsB;AAAA,MAARa,MAAQ;;AAC1C,UAAQA,MAAM,CAACH,IAAf;AACA,SAAKf,aAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELT,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKP,gBAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELX,QAAAA,KAAK,EAAEY,MAAM,CAACZ,KAFT;AAGLE,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAKN,cAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELV,QAAAA,KAAK,EAAEW,MAAM,CAACX,KAFT;AAGLC,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAKL,WAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELR,QAAAA,MAAM,EAAE,EAAE,GAAGQ,KAAK,CAACR,MAAX;AAAmBC,UAAAA,IAAI,EAAEQ,MAAM,CAACR,IAAhC;AAAsCC,UAAAA,aAAa,EAAEO,MAAM,CAACC;AAA5D;AAFH,OAAP;;AAIF,SAAKf,WAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELL,QAAAA,OAAO,EAAEM,MAAM,CAACN;AAFX,OAAP;;AAIF;AACE,aAAOK,KAAP;AA7BF;AA+BD;;AAED,eAAeD,IAAf","sourcesContent":["import { REQUEST_TOKEN,\n  GET_TOKEN_SUCESS,\n  GET_TOKEN_FAIL,\n  VALID_LOGIN,\n  SET_CONFIGS } from '../actions';\n\nconst initialState = {\n  token: '',\n  error: '',\n  isLoading: false,\n  player: {\n    name: '',\n    gravatarEmail: '',\n  },\n  configs: {\n    category: '0',\n    difficulty: '0',\n    type: '0',\n  },\n};\n\nfunction game(state = initialState, action) {\n  switch (action.type) {\n  case REQUEST_TOKEN:\n    return {\n      ...state,\n      isLoading: true,\n    };\n  case GET_TOKEN_SUCESS:\n    return {\n      ...state,\n      token: action.token,\n      isLoading: false,\n    };\n  case GET_TOKEN_FAIL:\n    return {\n      ...state,\n      error: action.error,\n      isLoading: false,\n    };\n  case VALID_LOGIN:\n    return {\n      ...state,\n      player: { ...state.player, name: action.name, gravatarEmail: action.email },\n    };\n  case SET_CONFIGS:\n    return {\n      ...state,\n      configs: action.configs,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default game;\n"]},"metadata":{},"sourceType":"module"}