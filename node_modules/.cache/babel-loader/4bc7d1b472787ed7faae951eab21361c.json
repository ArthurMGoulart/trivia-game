{"ast":null,"code":"var _jsxFileName = \"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { validLogin, fetchToken } from '../redux/actions';\nimport './login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClickPlay = this.handleClickPlay.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.handleClickConfig = this.handleClickConfig.bind(this);\n    this.setEmailAndName = this.setEmailAndName.bind(this);\n  }\n\n  componentDidMount() {\n    this.setEmailAndName();\n  }\n\n  setEmailAndName() {\n    const {\n      name,\n      email\n    } = this.props;\n    this.setState({\n      email,\n      name\n    });\n  }\n\n  async handleClickPlay(event) {\n    event.preventDefault();\n    const {\n      history,\n      dispatchValidLogin,\n      dispatchfetchToken,\n      token\n    } = this.props;\n    const {\n      email,\n      name\n    } = this.state;\n    await dispatchfetchToken();\n    localStorage.setItem('token', token);\n    dispatchValidLogin(name, email);\n    history.push('/jogo');\n  }\n\n  async handleClickConfig(event) {\n    event.preventDefault();\n    const {\n      history,\n      dispatchValidLogin\n    } = this.props;\n    const {\n      email,\n      name\n    } = this.state; // await dispatchfetchToken();\n    // localStorage.setItem('token', token);\n\n    dispatchValidLogin(name, email);\n    history.push('/configuracoes');\n  }\n\n  handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  renderEmailInput() {\n    const {\n      email\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label text-start mb-3 text-white fw-bold\",\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, \"Email do Gravatar\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control input removeMargin\",\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      value: email,\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderNameInput() {\n    const {\n      name\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label text-start mb-3 text-white fw-bold\",\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, \"Nome do Jogador\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control input\",\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      value: name,\n      \"data-testid\": \"input-player-name\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderForm() {\n    const {\n      email,\n      name\n    } = this.state;\n    const isDisabled = !email || !name;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"d-flex flex-column justify-content-center rounded form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mb-5 text-white fw-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, \"TRIVIA GAME\"), this.renderEmailInput(), this.renderNameInput(), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"text-uppercase btn btn-play fw-bold mb-3\",\n      type: \"submit\",\n      disabled: isDisabled,\n      onClick: this.handleClickPlay,\n      \"data-testid\": \"btn-play\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, \"Vamos Jogar!\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"text-uppercase btn btn-config fw-bold mb-5\",\n      type: \"submit\",\n      onClick: this.handleClickConfig,\n      \"data-testid\": \"btn-settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, \"Configura\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"devs d-flex btn justify-content-center align-items-center\",\n      to: \"/devs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"header-devs text-uppercase fw-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, \"Devs\")));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, this.renderForm());\n  }\n\n}\n\nLogin.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  dispatchValidLogin: PropTypes.func.isRequired,\n  dispatchfetchToken: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  token: PropTypes.string.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchValidLogin: (name, email) => dispatch(validLogin(name, email)),\n  dispatchfetchToken: () => dispatch(fetchToken())\n});\n\nconst mapStateToProps = state => ({\n  email: state.game.player.gravatarEmail,\n  name: state.game.player.name,\n  token: state.game.token\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/src/pages/Login.js"],"names":["React","PropTypes","connect","Link","validLogin","fetchToken","Login","Component","constructor","state","email","name","handleChange","bind","handleClickPlay","renderForm","handleClickConfig","setEmailAndName","componentDidMount","props","setState","event","preventDefault","history","dispatchValidLogin","dispatchfetchToken","token","localStorage","setItem","push","target","value","renderEmailInput","renderNameInput","isDisabled","render","propTypes","string","isRequired","func","shape","mapDispatchToProps","dispatch","mapStateToProps","game","player","gravatarEmail"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { validLogin, fetchToken } from '../redux/actions';\nimport './login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      name: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClickPlay = this.handleClickPlay.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.handleClickConfig = this.handleClickConfig.bind(this);\n    this.setEmailAndName = this.setEmailAndName.bind(this);\n  }\n\n  componentDidMount() {\n    this.setEmailAndName();\n  }\n\n  setEmailAndName() {\n    const { name, email } = this.props;\n    this.setState({\n      email,\n      name,\n    });\n  }\n\n  async handleClickPlay(event) {\n    event.preventDefault();\n    const { history, dispatchValidLogin, dispatchfetchToken, token } = this.props;\n    const { email, name } = this.state;\n    await dispatchfetchToken();\n    localStorage.setItem('token', token);\n    dispatchValidLogin(name, email);\n    history.push('/jogo');\n  }\n\n  async handleClickConfig(event) {\n    event.preventDefault();\n    const { history, dispatchValidLogin } = this.props;\n    const { email, name } = this.state;\n    // await dispatchfetchToken();\n    // localStorage.setItem('token', token);\n    dispatchValidLogin(name, email);\n    history.push('/configuracoes');\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  renderEmailInput() {\n    const { email } = this.state;\n    return (\n      <label className=\"form-label text-start mb-3 text-white fw-bold\" htmlFor=\"email\">\n        Email do Gravatar\n        <input\n          className=\"form-control input removeMargin\"\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          value={ email }\n          data-testid=\"input-gravatar-email\"\n          onChange={ this.handleChange }\n        />\n      </label>\n    );\n  }\n\n  renderNameInput() {\n    const { name } = this.state;\n    return (\n      <label className=\"form-label text-start mb-3 text-white fw-bold\" htmlFor=\"name\">\n        Nome do Jogador\n        <input\n          className=\"form-control input\"\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={ name }\n          data-testid=\"input-player-name\"\n          onChange={ this.handleChange }\n        />\n      </label>\n    );\n  }\n\n  renderForm() {\n    const { email, name } = this.state;\n    const isDisabled = !email || !name;\n    return (\n      <form className=\"d-flex flex-column justify-content-center rounded form\">\n        <h3 className=\"mb-5 text-white fw-bold\">TRIVIA GAME</h3>\n        { this.renderEmailInput() }\n        { this.renderNameInput() }\n        <button\n          className=\"text-uppercase btn btn-play fw-bold mb-3\"\n          type=\"submit\"\n          disabled={ isDisabled }\n          onClick={ this.handleClickPlay }\n          data-testid=\"btn-play\"\n        >\n          Vamos Jogar!\n        </button>\n        <button\n          className=\"text-uppercase btn btn-config fw-bold mb-5\"\n          type=\"submit\"\n          onClick={ this.handleClickConfig }\n          data-testid=\"btn-settings\"\n        >\n          Configurações\n        </button>\n        <Link\n          className=\"devs\n          d-flex btn justify-content-center align-items-center\"\n          to=\"/devs\"\n        >\n          <span className=\"header-devs text-uppercase fw-bold\">Devs</span>\n        </Link>\n      </form>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"text-center\">\n        { this.renderForm() }\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  dispatchValidLogin: PropTypes.func.isRequired,\n  dispatchfetchToken: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  token: PropTypes.string.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchValidLogin: (name, email) => dispatch(validLogin(name, email)),\n  dispatchfetchToken: () => dispatch(fetchToken()),\n});\n\nconst mapStateToProps = (state) => ({\n  email: state.game.player.gravatarEmail,\n  name: state.game.player.name,\n  token: state.game.token,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}