{"ast":null,"code":"import _toConsumableArray from\"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{getTriviaApi,fetchAvatar}from'../utils/utils';import JogoHeader from'../components/JogoHeader';import Pergunta from'../components/Pergunta';import'./jogo.css';var Jogo=/*#__PURE__*/function(_React$Component){_inherits(Jogo,_React$Component);var _super=_createSuper(Jogo);function Jogo(props){var _this;_classCallCheck(this,Jogo);_this=_super.call(this,props);_this.state={questions:[],currentIndex:0,isLoading:true,seconds:30,player:{name:props.name,assertions:0,score:0,gravatarEmail:props.email}};_this.getData=_this.getData.bind(_assertThisInitialized(_this));_this.tickSecond=_this.tickSecond.bind(_assertThisInitialized(_this));_this.handleClickAnswer=_this.handleClickAnswer.bind(_assertThisInitialized(_this));_this.calculateScore=_this.calculateScore.bind(_assertThisInitialized(_this));_this.startClock=_this.startClock.bind(_assertThisInitialized(_this));_this.setRanking=_this.setRanking.bind(_assertThisInitialized(_this));_this.handleClickNext=_this.handleClickNext.bind(_assertThisInitialized(_this));return _this;}_createClass(Jogo,[{key:\"componentDidMount\",value:function componentDidMount(){this.getData();this.startClock();this.setPlayerLocalStorage();}},{key:\"getData\",value:function(){var _getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this$props,token,configs,category,difficulty,type,data,MIN_QUESTIONS;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this$props=this.props,token=_this$props.token,configs=_this$props.configs;category=configs.category,difficulty=configs.difficulty,type=configs.type;_context.next=4;return getTriviaApi(token,category,difficulty,type);case 4:data=_context.sent;MIN_QUESTIONS=5;if(!(data.length>=MIN_QUESTIONS)){_context.next=10;break;}this.setState({questions:data,isLoading:false});_context.next=14;break;case 10:_context.next=12;return getTriviaApi(token);case 12:data=_context.sent;this.setState({questions:data,isLoading:false});case 14:case\"end\":return _context.stop();}}},_callee,this);}));function getData(){return _getData.apply(this,arguments);}return getData;}()},{key:\"setPlayerLocalStorage\",value:function setPlayerLocalStorage(){var player=this.state.player;var objectPlayer={player:player};localStorage.setItem('state',JSON.stringify(objectPlayer));}},{key:\"setRanking\",value:function setRanking(){var _this$state$player=this.state.player,name=_this$state$player.name,gravatarEmail=_this$state$player.gravatarEmail,score=_this$state$player.score;var rankingStore=localStorage.getItem('ranking');var ranking=JSON.parse(rankingStore);var currentPlayer={name:name,score:score,picture:fetchAvatar(gravatarEmail)};if(ranking){var rankingArray=[].concat(_toConsumableArray(ranking),[currentPlayer]);localStorage.setItem('ranking',JSON.stringify(rankingArray));}else{var _rankingArray=[currentPlayer];localStorage.setItem('ranking',JSON.stringify(_rankingArray));}}},{key:\"startClock\",value:function startClock(){var MAGIC_NUMBER=1000;this.setState({seconds:30});this.intervalId=setInterval(this.tickSecond,MAGIC_NUMBER);}},{key:\"tickSecond\",value:function tickSecond(){var seconds=this.state.seconds;if(seconds>0){this.setState(function(prevState){return{seconds:prevState.seconds-1};});}else{clearInterval(this.intervalId);var nextBtn=document.getElementById('next');nextBtn.hidden=false;}}},{key:\"handleClickAnswer\",value:function handleClickAnswer(event){var target=event.target;var alternatives=_toConsumableArray(target.parentElement.children);alternatives.forEach(function(alternative){return alternative.classList.add('selected');});alternatives.forEach(function(alternative){alternative.disabled=true;});if(target.classList.contains('correct')){this.calculateScore();}var nextBtn=document.getElementById('next');nextBtn.hidden=false;}},{key:\"handleClickNext\",value:function handleClickNext(){var _this2=this;var currentIndex=this.state.currentIndex;var NUMBER_OF_QUESTIONS=4;if(currentIndex<NUMBER_OF_QUESTIONS){this.setState(function(prevState){return{currentIndex:prevState.currentIndex+1};},function(){return _this2.startClock();});var containerAlternatives=document.getElementById('alternatives-container');var alternatives=_toConsumableArray(containerAlternatives.children);alternatives.forEach(function(alternative){return alternative.classList.remove('selected');});alternatives.forEach(function(alternative){alternative.disabled=false;});var nextBtn=document.getElementById('next');nextBtn.hidden=true;clearInterval(this.intervalId);}else{this.setRanking();var history=this.props.history;history.push('/feedback');}}},{key:\"calculateScore\",value:function calculateScore(){var MINIMUN_SCORE=10;var _this$state=this.state,questions=_this$state.questions,currentIndex=_this$state.currentIndex,seconds=_this$state.seconds;var currentQuestion=questions[currentIndex];var difficulty=currentQuestion.difficulty;var difficultValue=this.switchDifficult(difficulty);var assertionScore=MINIMUN_SCORE+seconds*difficultValue;var _this$props2=this.props,name=_this$props2.name,email=_this$props2.email;this.setState(function(prevState){return{player:{name:name,assertions:prevState.player.assertions+1,score:prevState.player.score+assertionScore,gravatarEmail:email}};},this.setPlayerLocalStorage);}},{key:\"switchDifficult\",value:function switchDifficult(difficulty){var HARD_VALUE=3;var MEDIUM_VALUE=2;var EASY_VALUE=1;switch(difficulty){case'hard':return HARD_VALUE;case'medium':return MEDIUM_VALUE;case'easy':return EASY_VALUE;default:return 0;}}},{key:\"render\",value:function render(){var _this$state2=this.state,score=_this$state2.player.score,isLoading=_this$state2.isLoading,questions=_this$state2.questions,currentIndex=_this$state2.currentIndex,seconds=_this$state2.seconds;return/*#__PURE__*/React.createElement(\"div\",{className:\"questions text-center\"},!isLoading&&/*#__PURE__*/React.createElement(JogoHeader,{score:score}),!isLoading&&/*#__PURE__*/React.createElement(Pergunta,{questions:questions,currentIndex:currentIndex,seconds:seconds,handleClickAnswer:this.handleClickAnswer}),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-next text-uppercase fw-bold px-5\",id:\"next\",\"data-testid\":\"btn-next\",type:\"button\",onClick:this.handleClickNext,hidden:true},\"Pr\\xF3xima\"));}}]);return Jogo;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{email:state.game.player.gravatarEmail,name:state.game.player.name,token:state.game.token,configs:state.game.configs};};export default connect(mapStateToProps,null)(Jogo);","map":{"version":3,"sources":["/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/src/pages/Jogo.js"],"names":["React","connect","getTriviaApi","fetchAvatar","JogoHeader","Pergunta","Jogo","props","state","questions","currentIndex","isLoading","seconds","player","name","assertions","score","gravatarEmail","email","getData","bind","tickSecond","handleClickAnswer","calculateScore","startClock","setRanking","handleClickNext","setPlayerLocalStorage","token","configs","category","difficulty","type","data","MIN_QUESTIONS","length","setState","objectPlayer","localStorage","setItem","JSON","stringify","rankingStore","getItem","ranking","parse","currentPlayer","picture","rankingArray","MAGIC_NUMBER","intervalId","setInterval","prevState","clearInterval","nextBtn","document","getElementById","hidden","event","target","alternatives","parentElement","children","forEach","alternative","classList","add","disabled","contains","NUMBER_OF_QUESTIONS","containerAlternatives","remove","history","push","MINIMUN_SCORE","currentQuestion","difficultValue","switchDifficult","assertionScore","HARD_VALUE","MEDIUM_VALUE","EASY_VALUE","Component","mapStateToProps","game"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getTriviaApi, fetchAvatar } from '../utils/utils';\nimport JogoHeader from '../components/JogoHeader';\nimport Pergunta from '../components/Pergunta';\nimport './jogo.css';\n\nclass Jogo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      currentIndex: 0,\n      isLoading: true,\n      seconds: 30,\n      player: {\n        name: props.name,\n        assertions: 0,\n        score: 0,\n        gravatarEmail: props.email,\n      },\n    };\n    this.getData = this.getData.bind(this);\n    this.tickSecond = this.tickSecond.bind(this);\n    this.handleClickAnswer = this.handleClickAnswer.bind(this);\n    this.calculateScore = this.calculateScore.bind(this);\n    this.startClock = this.startClock.bind(this);\n    this.setRanking = this.setRanking.bind(this);\n    this.handleClickNext = this.handleClickNext.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n    this.startClock();\n    this.setPlayerLocalStorage();\n  }\n\n  async getData() {\n    const { token, configs } = this.props;\n    const { category, difficulty, type } = configs;\n    let data = await getTriviaApi(token, category, difficulty, type);\n    const MIN_QUESTIONS = 5;\n    if (data.length >= MIN_QUESTIONS) {\n      this.setState({\n        questions: data,\n        isLoading: false,\n      });\n    } else {\n      data = await getTriviaApi(token);\n      this.setState({\n        questions: data,\n        isLoading: false,\n      });\n    }\n  }\n\n  setPlayerLocalStorage() {\n    const { player } = this.state;\n    const objectPlayer = {\n      player,\n    };\n    localStorage.setItem('state', JSON.stringify(objectPlayer));\n  }\n\n  setRanking() {\n    const { player: { name, gravatarEmail, score } } = this.state;\n    const rankingStore = localStorage.getItem('ranking');\n    const ranking = JSON.parse(rankingStore);\n    const currentPlayer = {\n      name,\n      score,\n      picture: fetchAvatar(gravatarEmail),\n    };\n    if (ranking) {\n      const rankingArray = [...ranking, currentPlayer];\n      localStorage.setItem('ranking', JSON.stringify(rankingArray));\n    } else {\n      const rankingArray = [currentPlayer];\n      localStorage.setItem('ranking', JSON.stringify(rankingArray));\n    }\n  }\n\n  startClock() {\n    const MAGIC_NUMBER = 1000;\n    this.setState({\n      seconds: 30,\n    });\n    this.intervalId = setInterval(this.tickSecond, MAGIC_NUMBER);\n  }\n\n  tickSecond() {\n    const { seconds } = this.state;\n    if (seconds > 0) {\n      this.setState((prevState) => ({\n        seconds: prevState.seconds - 1,\n      }));\n    } else {\n      clearInterval(this.intervalId);\n      const nextBtn = document.getElementById('next');\n      nextBtn.hidden = false;\n    }\n  }\n\n  handleClickAnswer(event) {\n    const { target } = event;\n    const alternatives = [...target.parentElement.children];\n    alternatives.forEach((alternative) => alternative.classList.add('selected'));\n    alternatives.forEach((alternative) => {\n      alternative.disabled = true;\n    });\n\n    if (target.classList.contains('correct')) {\n      this.calculateScore();\n    }\n    const nextBtn = document.getElementById('next');\n    nextBtn.hidden = false;\n  }\n\n  handleClickNext() {\n    const { currentIndex } = this.state;\n    const NUMBER_OF_QUESTIONS = 4;\n    if (currentIndex < NUMBER_OF_QUESTIONS) {\n      this.setState((prevState) => ({\n        currentIndex: prevState.currentIndex + 1,\n      }), () => this.startClock());\n      const containerAlternatives = document.getElementById('alternatives-container');\n      const alternatives = [...containerAlternatives.children];\n      alternatives.forEach((alternative) => alternative.classList.remove('selected'));\n      alternatives.forEach((alternative) => {\n        alternative.disabled = false;\n      });\n      const nextBtn = document.getElementById('next');\n      nextBtn.hidden = true;\n      clearInterval(this.intervalId);\n    } else {\n      this.setRanking();\n      const { history } = this.props;\n      history.push('/feedback');\n    }\n  }\n\n  calculateScore() {\n    const MINIMUN_SCORE = 10;\n    const { questions, currentIndex, seconds } = this.state;\n    const currentQuestion = questions[currentIndex];\n    const { difficulty } = currentQuestion;\n    const difficultValue = this.switchDifficult(difficulty);\n    const assertionScore = MINIMUN_SCORE + (seconds * difficultValue);\n    const { name, email } = this.props;\n    this.setState((prevState) => ({\n      player: {\n        name,\n        assertions: prevState.player.assertions + 1,\n        score: prevState.player.score + assertionScore,\n        gravatarEmail: email,\n      },\n    }), this.setPlayerLocalStorage);\n  }\n\n  switchDifficult(difficulty) {\n    const HARD_VALUE = 3;\n    const MEDIUM_VALUE = 2;\n    const EASY_VALUE = 1;\n    switch (difficulty) {\n    case 'hard':\n      return HARD_VALUE;\n    case 'medium':\n      return MEDIUM_VALUE;\n    case 'easy':\n      return EASY_VALUE;\n    default:\n      return 0;\n    }\n  }\n\n  render() {\n    const { player: { score }, isLoading, questions, currentIndex, seconds } = this.state;\n    return (\n      <div className=\"questions text-center\">\n        { (!isLoading && <JogoHeader score={ score } />) }\n        { (!isLoading\n            && <Pergunta\n              questions={ questions }\n              currentIndex={ currentIndex }\n              seconds={ seconds }\n              handleClickAnswer={ this.handleClickAnswer }\n            />) }\n        <button\n          className=\"btn btn-next text-uppercase fw-bold px-5\"\n          id=\"next\"\n          data-testid=\"btn-next\"\n          type=\"button\"\n          onClick={ this.handleClickNext }\n          hidden\n        >\n          Próxima\n        </button>\n      </div>\n    );\n  }\n}\nJogo.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  configs: PropTypes.shape().isRequired,\n};\nconst mapStateToProps = (state) => ({\n  email: state.game.player.gravatarEmail,\n  name: state.game.player.name,\n  token: state.game.token,\n  configs: state.game.configs,\n});\nexport default connect(mapStateToProps, null)(Jogo);\n"]},"metadata":{},"sourceType":"module"}