{"ast":null,"code":"import _toConsumableArray from\"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import'./pergunta.css';var Pergunta=/*#__PURE__*/function(_React$Component){_inherits(Pergunta,_React$Component);function Pergunta(){var _this;_classCallCheck(this,Pergunta);_this=_possibleConstructorReturn(this,_getPrototypeOf(Pergunta).call(this));_this.renderCategoryAndTime=_this.renderCategoryAndTime.bind(_assertThisInitialized(_this));_this.renderAnswers=_this.renderAnswers.bind(_assertThisInitialized(_this));_this.renderQuestion=_this.renderQuestion.bind(_assertThisInitialized(_this));return _this;}_createClass(Pergunta,[{key:\"renderCategoryAndTime\",value:function renderCategoryAndTime(currentQuestion){var seconds=this.props.seconds;return React.createElement(\"div\",{className:\"grid mb-4\"},React.createElement(\"h2\",{className:\"text-uppercase fs-5 fw-bold text-start\",\"data-testid\":\"question-category\"},currentQuestion.category),React.createElement(\"p\",{className:\"text-uppercase fw-bold text-end\"},\"Tempo:\",' ',seconds));}},{key:\"renderQuestion\",value:function renderQuestion(currentQuestion){return React.createElement(\"div\",{className:\"rounded p-3 mb-4 current-question\"},React.createElement(\"p\",{className:\"m-0 fw-bold fs-5\",\"data-testid\":\"question-text\"},currentQuestion.question));}},{key:\"renderAnswers\",value:function renderAnswers(sortAlternatives,correctAnswer){var _this$props=this.props,seconds=_this$props.seconds,handleClickAnswer=_this$props.handleClickAnswer;return React.createElement(\"div\",{className:\"answers\",id:\"alternatives-container\"},sortAlternatives.map(function(alternative,index){if(alternative===correctAnswer){return React.createElement(\"button\",{key:index,\"data-testid\":\"correct-answer\",type:\"button\",className:\"correct btn btn-answer\",onClick:handleClickAnswer,disabled:seconds===0},alternative);}return React.createElement(\"button\",{key:index,\"data-testid\":\"wrong-answer-\".concat(index),type:\"button\",className:\"incorrect btn btn-answer\",onClick:handleClickAnswer,disabled:seconds===0},alternative);}));}},{key:\"render\",value:function render(){var _this$props2=this.props,questions=_this$props2.questions,currentIndex=_this$props2.currentIndex;var currentQuestion=questions[currentIndex];var correctAnswer=currentQuestion.correct_answer;var alternatives=[].concat(_toConsumableArray(currentQuestion.incorrect_answers),[correctAnswer]);var sortAlternatives=alternatives.sort();return React.createElement(\"div\",{className:\"quetions-container rounded mb-3\"},this.renderCategoryAndTime(currentQuestion),this.renderQuestion(currentQuestion),this.renderAnswers(sortAlternatives,correctAnswer));}}]);return Pergunta;}(React.Component);export default Pergunta;","map":{"version":3,"sources":["/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/src/components/Pergunta.js"],"names":["React","Pergunta","renderCategoryAndTime","bind","renderAnswers","renderQuestion","currentQuestion","seconds","props","category","question","sortAlternatives","correctAnswer","handleClickAnswer","map","alternative","index","questions","currentIndex","correct_answer","alternatives","incorrect_answers","sort","Component"],"mappings":"2wCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,gBAAP,C,GAEMC,CAAAA,Q,8EACJ,mBAAc,0CACZ,4EAEA,MAAKC,qBAAL,CAA6B,MAAKA,qBAAL,CAA2BC,IAA3B,+BAA7B,CACA,MAAKC,aAAL,CAAqB,MAAKA,aAAL,CAAmBD,IAAnB,+BAArB,CACA,MAAKE,cAAL,CAAsB,MAAKA,cAAL,CAAoBF,IAApB,+BAAtB,CALY,aAMb,C,yFAEqBG,e,CAAiB,IAC7BC,CAAAA,OAD6B,CACjB,KAAKC,KADY,CAC7BD,OAD6B,CAErC,MACE,4BAAK,SAAS,CAAC,WAAf,EACE,0BACE,SAAS,CAAC,wCADZ,CAEE,cAAY,mBAFd,EAIID,eAAe,CAACG,QAJpB,CADF,CAOE,yBAAG,SAAS,CAAC,iCAAb,WAEG,GAFH,CAGIF,OAHJ,CAPF,CADF,CAeD,C,sDAEcD,e,CAAiB,CAC9B,MACE,4BAAK,SAAS,CAAC,mCAAf,EACE,yBACE,SAAS,CAAC,kBADZ,CAEE,cAAY,eAFd,EAIIA,eAAe,CAACI,QAJpB,CADF,CADF,CAUD,C,oDAEaC,gB,CAAkBC,a,CAAe,iBACN,KAAKJ,KADC,CACrCD,OADqC,aACrCA,OADqC,CAC5BM,iBAD4B,aAC5BA,iBAD4B,CAE7C,MACE,4BAAK,SAAS,CAAC,SAAf,CAAyB,EAAE,CAAC,wBAA5B,EACGF,gBAAgB,CAACG,GAAjB,CAAqB,SAACC,WAAD,CAAcC,KAAd,CAAwB,CAC5C,GAAID,WAAW,GAAKH,aAApB,CAAmC,CACjC,MACE,+BACE,GAAG,CAAGI,KADR,CAEE,cAAY,gBAFd,CAGE,IAAI,CAAC,QAHP,CAIE,SAAS,CAAC,wBAJZ,CAKE,OAAO,CAAGH,iBALZ,CAME,QAAQ,CAAGN,OAAO,GAAK,CANzB,EAQIQ,WARJ,CADF,CAYD,CACD,MACE,+BACE,GAAG,CAAGC,KADR,CAEE,qCAA8BA,KAA9B,CAFF,CAGE,IAAI,CAAC,QAHP,CAIE,SAAS,CAAC,0BAJZ,CAKE,OAAO,CAAGH,iBALZ,CAME,QAAQ,CAAGN,OAAO,GAAK,CANzB,EAQIQ,WARJ,CADF,CAWD,CA1BA,CADH,CADF,CA+BD,C,uCAEQ,kBAC6B,KAAKP,KADlC,CACCS,SADD,cACCA,SADD,CACYC,YADZ,cACYA,YADZ,CAEP,GAAMZ,CAAAA,eAAe,CAAGW,SAAS,CAACC,YAAD,CAAjC,CACA,GAAMN,CAAAA,aAAa,CAAGN,eAAe,CAACa,cAAtC,CACA,GAAMC,CAAAA,YAAY,8BAAOd,eAAe,CAACe,iBAAvB,GAA0CT,aAA1C,EAAlB,CACA,GAAMD,CAAAA,gBAAgB,CAAGS,YAAY,CAACE,IAAb,EAAzB,CACA,MACE,4BAAK,SAAS,CAAC,iCAAf,EACI,KAAKpB,qBAAL,CAA2BI,eAA3B,CADJ,CAEI,KAAKD,cAAL,CAAoBC,eAApB,CAFJ,CAGI,KAAKF,aAAL,CAAmBO,gBAAnB,CAAqCC,aAArC,CAHJ,CADF,CAOD,C,sBAzFoBZ,KAAK,CAACuB,S,EAmG7B,cAAetB,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './pergunta.css';\n\nclass Pergunta extends React.Component {\n  constructor() {\n    super();\n\n    this.renderCategoryAndTime = this.renderCategoryAndTime.bind(this);\n    this.renderAnswers = this.renderAnswers.bind(this);\n    this.renderQuestion = this.renderQuestion.bind(this);\n  }\n\n  renderCategoryAndTime(currentQuestion) {\n    const { seconds } = this.props;\n    return (\n      <div className=\"grid mb-4\">\n        <h2\n          className=\"text-uppercase fs-5 fw-bold text-start\"\n          data-testid=\"question-category\"\n        >\n          { currentQuestion.category }\n        </h2>\n        <p className=\"text-uppercase fw-bold text-end\">\n          Tempo:\n          {' '}\n          { seconds }\n        </p>\n      </div>\n    );\n  }\n\n  renderQuestion(currentQuestion) {\n    return (\n      <div className=\"rounded p-3 mb-4 current-question\">\n        <p\n          className=\"m-0 fw-bold fs-5\"\n          data-testid=\"question-text\"\n        >\n          { currentQuestion.question }\n        </p>\n      </div>\n    );\n  }\n\n  renderAnswers(sortAlternatives, correctAnswer) {\n    const { seconds, handleClickAnswer } = this.props;\n    return (\n      <div className=\"answers\" id=\"alternatives-container\">\n        {sortAlternatives.map((alternative, index) => {\n          if (alternative === correctAnswer) {\n            return (\n              <button\n                key={ index }\n                data-testid=\"correct-answer\"\n                type=\"button\"\n                className=\"correct btn btn-answer\"\n                onClick={ handleClickAnswer }\n                disabled={ seconds === 0 }\n              >\n                { alternative }\n              </button>\n            );\n          }\n          return (\n            <button\n              key={ index }\n              data-testid={ `wrong-answer-${index}` }\n              type=\"button\"\n              className=\"incorrect btn btn-answer\"\n              onClick={ handleClickAnswer }\n              disabled={ seconds === 0 }\n            >\n              { alternative }\n            </button>);\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { questions, currentIndex } = this.props;\n    const currentQuestion = questions[currentIndex];\n    const correctAnswer = currentQuestion.correct_answer;\n    const alternatives = [...currentQuestion.incorrect_answers, correctAnswer];\n    const sortAlternatives = alternatives.sort();\n    return (\n      <div className=\"quetions-container rounded mb-3\">\n        { this.renderCategoryAndTime(currentQuestion) }\n        { this.renderQuestion(currentQuestion) }\n        { this.renderAnswers(sortAlternatives, correctAnswer) }\n      </div>\n    );\n  }\n}\n\nPergunta.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  currentIndex: PropTypes.number.isRequired,\n  seconds: PropTypes.number.isRequired,\n  handleClickAnswer: PropTypes.func.isRequired,\n};\n\nexport default Pergunta;\n"]},"metadata":{},"sourceType":"module"}