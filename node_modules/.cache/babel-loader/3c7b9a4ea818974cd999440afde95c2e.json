{"ast":null,"code":"var _jsxFileName = \"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/src/components/Pergunta.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './pergunta.css';\n\nclass Pergunta extends React.Component {\n  constructor() {\n    super();\n    this.renderCategoryAndTime = this.renderCategoryAndTime.bind(this);\n    this.renderAnswers = this.renderAnswers.bind(this);\n    this.renderQuestion = this.renderQuestion.bind(this);\n  }\n\n  renderCategoryAndTime(currentQuestion) {\n    const {\n      seconds\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-uppercase fs-5 fw-bold text-start\",\n      \"data-testid\": \"question-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, currentQuestion.category), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-uppercase fw-bold text-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"Tempo:\", ' ', seconds));\n  }\n\n  renderQuestion(currentQuestion) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rounded p-3 mb-4 current-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"m-0 fw-bold fs-5\",\n      \"data-testid\": \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, currentQuestion.question));\n  }\n\n  renderAnswers(sortAlternatives, correctAnswer) {\n    const {\n      seconds,\n      handleClickAnswer\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answers\",\n      id: \"alternatives-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, sortAlternatives.map((alternative, index) => {\n      if (alternative === correctAnswer) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          key: index,\n          \"data-testid\": \"correct-answer\",\n          type: \"button\",\n          className: \"correct btn btn-answer\",\n          onClick: handleClickAnswer,\n          disabled: seconds === 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }\n        }, alternative);\n      }\n\n      return /*#__PURE__*/React.createElement(\"button\", {\n        key: index,\n        \"data-testid\": `wrong-answer-${index}`,\n        type: \"button\",\n        className: \"incorrect btn btn-answer\",\n        onClick: handleClickAnswer,\n        disabled: seconds === 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, alternative);\n    }));\n  }\n\n  render() {\n    const {\n      questions,\n      currentIndex\n    } = this.props;\n    const currentQuestion = questions[currentIndex];\n    const correctAnswer = currentQuestion.correct_answer;\n    const alternatives = [...currentQuestion.incorrect_answers, correctAnswer];\n    const sortAlternatives = alternatives.sort();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quetions-container rounded mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, this.renderCategoryAndTime(currentQuestion), this.renderQuestion(currentQuestion), this.renderAnswers(sortAlternatives, correctAnswer));\n  }\n\n}\n\nPergunta.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  currentIndex: PropTypes.number.isRequired,\n  seconds: PropTypes.number.isRequired,\n  handleClickAnswer: PropTypes.func.isRequired\n};\nexport default Pergunta;","map":{"version":3,"sources":["/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/src/components/Pergunta.js"],"names":["React","PropTypes","Pergunta","Component","constructor","renderCategoryAndTime","bind","renderAnswers","renderQuestion","currentQuestion","seconds","props","category","question","sortAlternatives","correctAnswer","handleClickAnswer","map","alternative","index","render","questions","currentIndex","correct_answer","alternatives","incorrect_answers","sort","propTypes","arrayOf","object","isRequired","number","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './pergunta.css';\n\nclass Pergunta extends React.Component {\n  constructor() {\n    super();\n\n    this.renderCategoryAndTime = this.renderCategoryAndTime.bind(this);\n    this.renderAnswers = this.renderAnswers.bind(this);\n    this.renderQuestion = this.renderQuestion.bind(this);\n  }\n\n  renderCategoryAndTime(currentQuestion) {\n    const { seconds } = this.props;\n    return (\n      <div className=\"grid mb-4\">\n        <h2\n          className=\"text-uppercase fs-5 fw-bold text-start\"\n          data-testid=\"question-category\"\n        >\n          { currentQuestion.category }\n        </h2>\n        <p className=\"text-uppercase fw-bold text-end\">\n          Tempo:\n          {' '}\n          { seconds }\n        </p>\n      </div>\n    );\n  }\n\n  renderQuestion(currentQuestion) {\n    return (\n      <div className=\"rounded p-3 mb-4 current-question\">\n        <p\n          className=\"m-0 fw-bold fs-5\"\n          data-testid=\"question-text\"\n        >\n          { currentQuestion.question }\n        </p>\n      </div>\n    );\n  }\n\n  renderAnswers(sortAlternatives, correctAnswer) {\n    const { seconds, handleClickAnswer } = this.props;\n    return (\n      <div className=\"answers\" id=\"alternatives-container\">\n        {sortAlternatives.map((alternative, index) => {\n          if (alternative === correctAnswer) {\n            return (\n              <button\n                key={ index }\n                data-testid=\"correct-answer\"\n                type=\"button\"\n                className=\"correct btn btn-answer\"\n                onClick={ handleClickAnswer }\n                disabled={ seconds === 0 }\n              >\n                { alternative }\n              </button>\n            );\n          }\n          return (\n            <button\n              key={ index }\n              data-testid={ `wrong-answer-${index}` }\n              type=\"button\"\n              className=\"incorrect btn btn-answer\"\n              onClick={ handleClickAnswer }\n              disabled={ seconds === 0 }\n            >\n              { alternative }\n            </button>);\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { questions, currentIndex } = this.props;\n    const currentQuestion = questions[currentIndex];\n    const correctAnswer = currentQuestion.correct_answer;\n    const alternatives = [...currentQuestion.incorrect_answers, correctAnswer];\n    const sortAlternatives = alternatives.sort();\n    return (\n      <div className=\"quetions-container rounded mb-3\">\n        { this.renderCategoryAndTime(currentQuestion) }\n        { this.renderQuestion(currentQuestion) }\n        { this.renderAnswers(sortAlternatives, correctAnswer) }\n      </div>\n    );\n  }\n}\n\nPergunta.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  currentIndex: PropTypes.number.isRequired,\n  seconds: PropTypes.number.isRequired,\n  handleClickAnswer: PropTypes.func.isRequired,\n};\n\nexport default Pergunta;\n"]},"metadata":{},"sourceType":"module"}