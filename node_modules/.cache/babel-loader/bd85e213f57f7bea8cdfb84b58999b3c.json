{"ast":null,"code":"import _regeneratorRuntime from\"/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";export var REQUEST_TOKEN='REQUEST_TOKEN';export var GET_TOKEN_SUCESS='GET_TOKEN_SUCESS';export var GET_TOKEN_FAIL='GET_TOKEN_FAIL';export var VALID_LOGIN='VALID_LOGIN';export var SET_CONFIGS='SET_CONFIGS';export var requestToken=function requestToken(){return{type:REQUEST_TOKEN};};export var getTokenSucess=function getTokenSucess(token){return{type:GET_TOKEN_SUCESS,token:token};};export var getTokenFail=function getTokenFail(error){return{type:GET_TOKEN_FAIL,error:error};};export var validLogin=function validLogin(name,email){return{type:VALID_LOGIN,name:name,email:email};};export var setConfigs=function setConfigs(configs){return{type:SET_CONFIGS,configs:configs};};export function fetchToken(){return function _callee(dispatch){var response,json,token;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(requestToken());_context.prev=1;_context.next=4;return _regeneratorRuntime.awrap(fetch('https://opentdb.com/api_token.php?command=request'));case 4:response=_context.sent;_context.next=7;return _regeneratorRuntime.awrap(response.json());case 7:json=_context.sent;token=json.token;dispatch(getTokenSucess(token));_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](1);dispatch(getTokenFail(_context.t0.message));case 15:case\"end\":return _context.stop();}}},null,null,[[1,12]]);};}","map":{"version":3,"sources":["/home/budi/Documents/Trybe_Conteudos/trivia-game/trivia-game/src/redux/actions/index.js"],"names":["REQUEST_TOKEN","GET_TOKEN_SUCESS","GET_TOKEN_FAIL","VALID_LOGIN","SET_CONFIGS","requestToken","type","getTokenSucess","token","getTokenFail","error","validLogin","name","email","setConfigs","configs","fetchToken","dispatch","fetch","response","json","message"],"mappings":"0KAAA,MAAO,IAAMA,CAAAA,aAAa,CAAG,eAAtB,CACP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,kBAAzB,CACP,MAAO,IAAMC,CAAAA,cAAc,CAAG,gBAAvB,CACP,MAAO,IAAMC,CAAAA,WAAW,CAAG,aAApB,CACP,MAAO,IAAMC,CAAAA,WAAW,CAAG,aAApB,CAEP,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,SAAO,CACjCC,IAAI,CAAEN,aAD2B,CAAP,EAArB,CAIP,MAAO,IAAMO,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,QAAY,CACxCF,IAAI,CAAEL,gBADkC,CAExCO,KAAK,CAALA,KAFwC,CAAZ,EAAvB,CAKP,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,QAAY,CACtCJ,IAAI,CAAEJ,cADgC,CAEtCQ,KAAK,CAALA,KAFsC,CAAZ,EAArB,CAKP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAOC,KAAP,QAAkB,CAC1CP,IAAI,CAAEH,WADoC,CAE1CS,IAAI,CAAJA,IAF0C,CAG1CC,KAAK,CAALA,KAH0C,CAAlB,EAAnB,CAMP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,QAAc,CACtCT,IAAI,CAAEF,WADgC,CAEtCW,OAAO,CAAPA,OAFsC,CAAd,EAAnB,CAKP,MAAO,SAASC,CAAAA,UAAT,EAAsB,CAC3B,MAAO,kBAAOC,QAAP,2IACLA,QAAQ,CAACZ,YAAY,EAAb,CAAR,CADK,iEAGoBa,KAAK,CAAC,mDAAD,CAHzB,SAGGC,QAHH,gEAIgBA,QAAQ,CAACC,IAAT,EAJhB,SAIGA,IAJH,eAKKZ,KALL,CAKeY,IALf,CAKKZ,KALL,CAMHS,QAAQ,CAACV,cAAc,CAACC,KAAD,CAAf,CAAR,CANG,iFAQHS,QAAQ,CAACR,YAAY,CAAC,YAAMY,OAAP,CAAb,CAAR,CARG,kEAAP,CAWD","sourcesContent":["export const REQUEST_TOKEN = 'REQUEST_TOKEN';\nexport const GET_TOKEN_SUCESS = 'GET_TOKEN_SUCESS';\nexport const GET_TOKEN_FAIL = 'GET_TOKEN_FAIL';\nexport const VALID_LOGIN = 'VALID_LOGIN';\nexport const SET_CONFIGS = 'SET_CONFIGS';\n\nexport const requestToken = () => ({\n  type: REQUEST_TOKEN,\n});\n\nexport const getTokenSucess = (token) => ({\n  type: GET_TOKEN_SUCESS,\n  token,\n});\n\nexport const getTokenFail = (error) => ({\n  type: GET_TOKEN_FAIL,\n  error,\n});\n\nexport const validLogin = (name, email) => ({\n  type: VALID_LOGIN,\n  name,\n  email,\n});\n\nexport const setConfigs = (configs) => ({\n  type: SET_CONFIGS,\n  configs,\n});\n\nexport function fetchToken() {\n  return async (dispatch) => {\n    dispatch(requestToken());\n    try {\n      const response = await fetch('https://opentdb.com/api_token.php?command=request');\n      const json = await response.json();\n      const { token } = json;\n      dispatch(getTokenSucess(token));\n    } catch (error) {\n      dispatch(getTokenFail(error.message));\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}