{"version":3,"sources":["images/trybeLogo.png","redux/actions/index.js","redux/reducers/game.js","redux/reducers/index.js","redux/store/index.js","pages/Login.js","utils/utils.js","components/JogoHeader.js","components/Pergunta.js","pages/Jogo.js","components/Option.js","data.js","pages/Configuracoes.js","pages/Feedback.js","pages/Ranking.js","pages/Devs.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","getTokenSucess","token","type","initialState","error","isLoading","player","name","gravatarEmail","configs","category","difficulty","game","state","action","email","rootReducer","combineReducers","login","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","Cypress","Login","handleChange","bind","handleClickPlay","renderForm","handleClickConfig","setEmailAndName","this","props","setState","event","preventDefault","history","dispatchValidLogin","dispatchfetchToken","localStorage","setItem","push","target","value","className","htmlFor","id","data-testid","onChange","isDisabled","renderEmailInput","renderNameInput","disabled","onClick","to","React","Component","connect","dispatch","validLogin","a","async","fetch","response","json","message","fetchAvatar","convertedEmail","md5","toString","getTriviaApi","results","JogoHeader","score","gravatar","src","alt","Pergunta","renderCategoryAndTime","renderAnswers","renderQuestion","currentQuestion","seconds","question","sortAlternatives","correctAnswer","handleClickAnswer","map","alternative","index","key","questions","currentIndex","correct_answer","incorrect_answers","sort","Jogo","assertions","getData","tickSecond","calculateScore","startClock","setRanking","handleClickNext","setPlayerLocalStorage","data","length","objectPlayer","JSON","stringify","rankingStore","getItem","ranking","parse","currentPlayer","picture","rankingArray","intervalId","setInterval","prevState","clearInterval","document","getElementById","hidden","alternatives","parentElement","children","forEach","classList","add","contains","containerAlternatives","remove","assertionScore","switchDifficult","Option","text","categories","difficulties","types","Configuracoes","handleClick","renderSelects","dispatchConfigs","cat","dif","item","setConfigs","Feedback","storedState","d-flex","flex-column","justify-content-center","Ranking","sortedRanking","b","renderRankingList","Devs","rel","href","trybeLogo","renderArthur","Boolean","location","hostname","match","ReactDOM","render","exact","path","component","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef9d8901.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trybeLogo.e10dbaaa.png\";","export const REQUEST_TOKEN = 'REQUEST_TOKEN';\nexport const GET_TOKEN_SUCESS = 'GET_TOKEN_SUCESS';\nexport const GET_TOKEN_FAIL = 'GET_TOKEN_FAIL';\nexport const VALID_LOGIN = 'VALID_LOGIN';\nexport const SET_CONFIGS = 'SET_CONFIGS';\n\nexport const requestToken = () => ({\n  type: REQUEST_TOKEN,\n});\n\nexport const getTokenSucess = (token) => ({\n  type: GET_TOKEN_SUCESS,\n  token,\n});\n\nexport const getTokenFail = (error) => ({\n  type: GET_TOKEN_FAIL,\n  error,\n});\n\nexport const validLogin = (name, email) => ({\n  type: VALID_LOGIN,\n  name,\n  email,\n});\n\nexport const setConfigs = (configs) => ({\n  type: SET_CONFIGS,\n  configs,\n});\n\nexport function fetchToken() {\n  return async (dispatch) => {\n    dispatch(requestToken());\n    try {\n      const response = await fetch('https://opentdb.com/api_token.php?command=request');\n      const json = await response.json();\n      const { token } = json;\n      dispatch(getTokenSucess(token));\n    } catch (error) {\n      dispatch(getTokenFail(error.message));\n    }\n  };\n}\n","import { REQUEST_TOKEN,\n  GET_TOKEN_SUCESS,\n  GET_TOKEN_FAIL,\n  VALID_LOGIN,\n  SET_CONFIGS } from '../actions';\n\nconst initialState = {\n  token: '',\n  error: '',\n  isLoading: false,\n  player: {\n    name: '',\n    gravatarEmail: '',\n  },\n  configs: {\n    category: '0',\n    difficulty: '0',\n    type: '0',\n  },\n};\n\nfunction game(state = initialState, action) {\n  switch (action.type) {\n  case REQUEST_TOKEN:\n    return {\n      ...state,\n      isLoading: true,\n    };\n  case GET_TOKEN_SUCESS:\n    return {\n      ...state,\n      token: action.token,\n      isLoading: false,\n    };\n  case GET_TOKEN_FAIL:\n    return {\n      ...state,\n      error: action.error,\n      isLoading: false,\n    };\n  case VALID_LOGIN:\n    return {\n      ...state,\n      player: { ...state.player, name: action.name, gravatarEmail: action.email },\n    };\n  case SET_CONFIGS:\n    return {\n      ...state,\n      configs: action.configs,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default game;\n","import { combineReducers } from 'redux';\nimport login from './login';\nimport game from './game';\n\nconst rootReducer = combineReducers({ login, game });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { validLogin, fetchToken } from '../redux/actions';\nimport './login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      name: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClickPlay = this.handleClickPlay.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.handleClickConfig = this.handleClickConfig.bind(this);\n    this.setEmailAndName = this.setEmailAndName.bind(this);\n  }\n\n  componentDidMount() {\n    this.setEmailAndName();\n  }\n\n  setEmailAndName() {\n    const { name, email } = this.props;\n    this.setState({\n      email,\n      name,\n    });\n  }\n\n  async handleClickPlay(event) {\n    event.preventDefault();\n    const { history, dispatchValidLogin, dispatchfetchToken, token } = this.props;\n    const { email, name } = this.state;\n    await dispatchfetchToken();\n    localStorage.setItem('token', token);\n    dispatchValidLogin(name, email);\n    history.push('/jogo');\n  }\n\n  async handleClickConfig(event) {\n    event.preventDefault();\n    const { history, dispatchValidLogin } = this.props;\n    const { email, name } = this.state;\n    // await dispatchfetchToken();\n    // localStorage.setItem('token', token);\n    dispatchValidLogin(name, email);\n    history.push('/configuracoes');\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  renderEmailInput() {\n    const { email } = this.state;\n    return (\n      <label className=\"form-label text-start mb-3 text-white fw-bold\" htmlFor=\"email\">\n        Email do Gravatar\n        <input\n          className=\"form-control input removeMargin\"\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          value={ email }\n          data-testid=\"input-gravatar-email\"\n          onChange={ this.handleChange }\n        />\n      </label>\n    );\n  }\n\n  renderNameInput() {\n    const { name } = this.state;\n    return (\n      <label className=\"form-label text-start mb-3 text-white fw-bold\" htmlFor=\"name\">\n        Nome do Jogador\n        <input\n          className=\"form-control input\"\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={ name }\n          data-testid=\"input-player-name\"\n          onChange={ this.handleChange }\n        />\n      </label>\n    );\n  }\n\n  renderForm() {\n    const { email, name } = this.state;\n    const isDisabled = !email || !name;\n    return (\n      <form className=\"d-flex flex-column justify-content-center rounded form\">\n        <h3 className=\"mb-5 text-white fw-bold\">TRIVIA GAME</h3>\n        { this.renderEmailInput() }\n        { this.renderNameInput() }\n        <button\n          className=\"text-uppercase btn btn-play fw-bold mb-3\"\n          type=\"submit\"\n          disabled={ isDisabled }\n          onClick={ this.handleClickPlay }\n          data-testid=\"btn-play\"\n        >\n          Vamos Jogar!\n        </button>\n        <button\n          className=\"text-uppercase btn btn-config fw-bold mb-5\"\n          type=\"submit\"\n          onClick={ this.handleClickConfig }\n          data-testid=\"btn-settings\"\n        >\n          Configurações\n        </button>\n        <Link\n          className=\"devs\n          d-flex btn justify-content-center align-items-center\"\n          to=\"/devs\"\n        >\n          <span className=\"header-devs text-uppercase fw-bold\">Devs</span>\n        </Link>\n      </form>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"text-center\">\n        { this.renderForm() }\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  dispatchValidLogin: PropTypes.func.isRequired,\n  dispatchfetchToken: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  token: PropTypes.string.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchValidLogin: (name, email) => dispatch(validLogin(name, email)),\n  dispatchfetchToken: () => dispatch(fetchToken()),\n});\n\nconst mapStateToProps = (state) => ({\n  email: state.game.player.gravatarEmail,\n  name: state.game.player.name,\n  token: state.game.token,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import md5 from 'crypto-js/md5';\n\nexport const fetchAvatar = (email) => {\n  const convertedEmail = md5(email).toString();\n  return `https://www.gravatar.com/avatar/${convertedEmail}`;\n};\n\nexport const getTriviaApi = async (token,\n  category = '0', difficulty = '0', type = '0') => {\n  const response = await fetch(`https://opentdb.com/api.php?amount=5&category=${category}&difficulty=${difficulty}&type=${type}&token=${token}`);\n  const json = await response.json();\n  return json.results;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchAvatar } from '../utils/utils';\nimport './jogoHeader.css';\n\nclass JogoHeader extends React.Component {\n  render() {\n    const { score, email, name } = this.props;\n    const gravatar = fetchAvatar(email);\n    return (\n      <header\n        className=\"rounded px-3 py-2 mb-1 header\"\n      >\n        <div className=\"d-flex align-items-center\">\n          <img\n            className=\"me-3 rounded-circle avatar\"\n            src={ gravatar }\n            alt={ `${name} Avatar` }\n            data-testid=\"header-profile-picture\"\n          />\n          <p\n            className=\"m-0 text-uppercase fw-bold\"\n            data-testid=\"header-player-name\"\n          >\n            { name }\n          </p>\n        </div>\n        <p className=\"m-0 text-uppercase fw-bold\">\n          Pontos:\n          { ' ' }\n          <span data-testid=\"header-score\">{ score }</span>\n        </p>\n      </header>\n    );\n  }\n}\n\nJogoHeader.propTypes = {\n  score: PropTypes.number.isRequired,\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  email: state.game.player.gravatarEmail,\n  name: state.game.player.name,\n});\n\nexport default connect(mapStateToProps)(JogoHeader);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './pergunta.css';\n\nclass Pergunta extends React.Component {\n  constructor() {\n    super();\n\n    this.renderCategoryAndTime = this.renderCategoryAndTime.bind(this);\n    this.renderAnswers = this.renderAnswers.bind(this);\n    this.renderQuestion = this.renderQuestion.bind(this);\n  }\n\n  renderCategoryAndTime(currentQuestion) {\n    const { seconds } = this.props;\n    return (\n      <div className=\"grid mb-4\">\n        <h2\n          className=\"text-uppercase fs-5 fw-bold text-start\"\n          data-testid=\"question-category\"\n        >\n          { currentQuestion.category }\n        </h2>\n        <p className=\"text-uppercase fw-bold text-end\">\n          Tempo:\n          {' '}\n          { seconds }\n        </p>\n      </div>\n    );\n  }\n\n  renderQuestion(currentQuestion) {\n    return (\n      <div className=\"rounded p-3 mb-4 current-question\">\n        <p\n          className=\"m-0 fw-bold fs-5\"\n          data-testid=\"question-text\"\n        >\n          { currentQuestion.question }\n        </p>\n      </div>\n    );\n  }\n\n  renderAnswers(sortAlternatives, correctAnswer) {\n    const { seconds, handleClickAnswer } = this.props;\n    return (\n      <div className=\"answers\" id=\"alternatives-container\">\n        {sortAlternatives.map((alternative, index) => {\n          if (alternative === correctAnswer) {\n            return (\n              <button\n                key={ index }\n                data-testid=\"correct-answer\"\n                type=\"button\"\n                className=\"correct btn btn-answer\"\n                onClick={ handleClickAnswer }\n                disabled={ seconds === 0 }\n              >\n                { alternative }\n              </button>\n            );\n          }\n          return (\n            <button\n              key={ index }\n              data-testid={ `wrong-answer-${index}` }\n              type=\"button\"\n              className=\"incorrect btn btn-answer\"\n              onClick={ handleClickAnswer }\n              disabled={ seconds === 0 }\n            >\n              { alternative }\n            </button>);\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { questions, currentIndex } = this.props;\n    const currentQuestion = questions[currentIndex];\n    const correctAnswer = currentQuestion.correct_answer;\n    const alternatives = [...currentQuestion.incorrect_answers, correctAnswer];\n    const sortAlternatives = alternatives.sort();\n    return (\n      <div className=\"quetions-container rounded mb-3\">\n        { this.renderCategoryAndTime(currentQuestion) }\n        { this.renderQuestion(currentQuestion) }\n        { this.renderAnswers(sortAlternatives, correctAnswer) }\n      </div>\n    );\n  }\n}\n\nPergunta.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  currentIndex: PropTypes.number.isRequired,\n  seconds: PropTypes.number.isRequired,\n  handleClickAnswer: PropTypes.func.isRequired,\n};\n\nexport default Pergunta;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getTriviaApi, fetchAvatar } from '../utils/utils';\nimport JogoHeader from '../components/JogoHeader';\nimport Pergunta from '../components/Pergunta';\nimport './jogo.css';\n\nclass Jogo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      currentIndex: 0,\n      isLoading: true,\n      seconds: 30,\n      player: {\n        name: props.name,\n        assertions: 0,\n        score: 0,\n        gravatarEmail: props.email,\n      },\n    };\n    this.getData = this.getData.bind(this);\n    this.tickSecond = this.tickSecond.bind(this);\n    this.handleClickAnswer = this.handleClickAnswer.bind(this);\n    this.calculateScore = this.calculateScore.bind(this);\n    this.startClock = this.startClock.bind(this);\n    this.setRanking = this.setRanking.bind(this);\n    this.handleClickNext = this.handleClickNext.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n    this.startClock();\n    this.setPlayerLocalStorage();\n  }\n\n  async getData() {\n    const { token, configs } = this.props;\n    const { category, difficulty, type } = configs;\n    let data = await getTriviaApi(token, category, difficulty, type);\n    const MIN_QUESTIONS = 5;\n    if (data.length >= MIN_QUESTIONS) {\n      this.setState({\n        questions: data,\n        isLoading: false,\n      });\n    } else {\n      data = await getTriviaApi(token);\n      this.setState({\n        questions: data,\n        isLoading: false,\n      });\n    }\n  }\n\n  setPlayerLocalStorage() {\n    const { player } = this.state;\n    const objectPlayer = {\n      player,\n    };\n    localStorage.setItem('state', JSON.stringify(objectPlayer));\n  }\n\n  setRanking() {\n    const { player: { name, gravatarEmail, score } } = this.state;\n    const rankingStore = localStorage.getItem('ranking');\n    const ranking = JSON.parse(rankingStore);\n    const currentPlayer = {\n      name,\n      score,\n      picture: fetchAvatar(gravatarEmail),\n    };\n    if (ranking) {\n      const rankingArray = [...ranking, currentPlayer];\n      localStorage.setItem('ranking', JSON.stringify(rankingArray));\n    } else {\n      const rankingArray = [currentPlayer];\n      localStorage.setItem('ranking', JSON.stringify(rankingArray));\n    }\n  }\n\n  startClock() {\n    const MAGIC_NUMBER = 1000;\n    this.setState({\n      seconds: 30,\n    });\n    this.intervalId = setInterval(this.tickSecond, MAGIC_NUMBER);\n  }\n\n  tickSecond() {\n    const { seconds } = this.state;\n    if (seconds > 0) {\n      this.setState((prevState) => ({\n        seconds: prevState.seconds - 1,\n      }));\n    } else {\n      clearInterval(this.intervalId);\n      const nextBtn = document.getElementById('next');\n      nextBtn.hidden = false;\n    }\n  }\n\n  handleClickAnswer(event) {\n    const { target } = event;\n    const alternatives = [...target.parentElement.children];\n    alternatives.forEach((alternative) => alternative.classList.add('selected'));\n    alternatives.forEach((alternative) => {\n      alternative.disabled = true;\n    });\n\n    if (target.classList.contains('correct')) {\n      this.calculateScore();\n    }\n    const nextBtn = document.getElementById('next');\n    nextBtn.hidden = false;\n  }\n\n  handleClickNext() {\n    const { currentIndex } = this.state;\n    const NUMBER_OF_QUESTIONS = 4;\n    if (currentIndex < NUMBER_OF_QUESTIONS) {\n      this.setState((prevState) => ({\n        currentIndex: prevState.currentIndex + 1,\n      }), () => this.startClock());\n      const containerAlternatives = document.getElementById('alternatives-container');\n      const alternatives = [...containerAlternatives.children];\n      alternatives.forEach((alternative) => alternative.classList.remove('selected'));\n      alternatives.forEach((alternative) => {\n        alternative.disabled = false;\n      });\n      const nextBtn = document.getElementById('next');\n      nextBtn.hidden = true;\n      clearInterval(this.intervalId);\n    } else {\n      this.setRanking();\n      const { history } = this.props;\n      history.push('/feedback');\n    }\n  }\n\n  calculateScore() {\n    const MINIMUN_SCORE = 10;\n    const { questions, currentIndex, seconds } = this.state;\n    const currentQuestion = questions[currentIndex];\n    const { difficulty } = currentQuestion;\n    const difficultValue = this.switchDifficult(difficulty);\n    const assertionScore = MINIMUN_SCORE + (seconds * difficultValue);\n    const { name, email } = this.props;\n    this.setState((prevState) => ({\n      player: {\n        name,\n        assertions: prevState.player.assertions + 1,\n        score: prevState.player.score + assertionScore,\n        gravatarEmail: email,\n      },\n    }), this.setPlayerLocalStorage);\n  }\n\n  switchDifficult(difficulty) {\n    const HARD_VALUE = 3;\n    const MEDIUM_VALUE = 2;\n    const EASY_VALUE = 1;\n    switch (difficulty) {\n    case 'hard':\n      return HARD_VALUE;\n    case 'medium':\n      return MEDIUM_VALUE;\n    case 'easy':\n      return EASY_VALUE;\n    default:\n      return 0;\n    }\n  }\n\n  render() {\n    const { player: { score }, isLoading, questions, currentIndex, seconds } = this.state;\n    return (\n      <div className=\"questions text-center\">\n        { (!isLoading && <JogoHeader score={ score } />) }\n        { (!isLoading\n            && <Pergunta\n              questions={ questions }\n              currentIndex={ currentIndex }\n              seconds={ seconds }\n              handleClickAnswer={ this.handleClickAnswer }\n            />) }\n        <button\n          className=\"btn btn-next text-uppercase fw-bold px-5\"\n          id=\"next\"\n          data-testid=\"btn-next\"\n          type=\"button\"\n          onClick={ this.handleClickNext }\n          hidden\n        >\n          Próxima\n        </button>\n      </div>\n    );\n  }\n}\nJogo.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  configs: PropTypes.shape().isRequired,\n};\nconst mapStateToProps = (state) => ({\n  email: state.game.player.gravatarEmail,\n  name: state.game.player.name,\n  token: state.game.token,\n  configs: state.game.configs,\n});\nexport default connect(mapStateToProps, null)(Jogo);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Option extends React.Component {\n  render() {\n    const { name, value, text } = this.props;\n\n    return (\n      <option name={ name } value={ value }>{ text }</option>\n    );\n  }\n}\nOption.propTypes = {\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Option;\n","export const categories = [\n  'Any Category',\n  'General Knowledge',\n  'Entertainment: Books',\n  'Entertainment: Film',\n  'Entertainment: Music',\n  'Entertainment: Musicals & Theatres',\n  'Entertainment: Television',\n  'Entertainment: Video Games',\n  'Entertainment: Board Games',\n  'Science & Nature',\n  'Science: Computers',\n  'Science: Mathematics',\n  'Mythology',\n  'Sports',\n  'Geography',\n  'History',\n  'Politics',\n  'Art',\n  'Celebrities',\n  'Animals',\n  'Vehicles',\n  'Entertainment: Comics',\n  'Science: Gadgets',\n  'Entertainment: Japanese Anime & Manga',\n  'Entertainment: Cartoon & Animations',\n];\n\nexport const difficulties = [\n  { value: '0', text: 'any' },\n  { value: 'easy', text: 'Easy' },\n  { value: 'medium', text: 'Medium' },\n  { value: 'hard', text: 'Hard' },\n];\n\nexport const types = [\n  { value: '0', text: 'Any Type' },\n  { value: 'multiple', text: 'Multiple Choice' },\n  { value: 'boolean', text: 'True / False' },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Option from '../components/Option';\nimport { setConfigs } from '../redux/actions';\nimport { categories, difficulties, types } from '../data';\nimport './configuracoes.css';\n\nclass Configuracoes extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      category: '0',\n      difficulty: '0',\n      type: '0',\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.renderSelects = this.renderSelects.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleClick() {\n    const { dispatchConfigs } = this.props;\n    dispatchConfigs(this.state);\n  }\n\n  handleChange({ target }) {\n    const { value, name } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  renderSelects() {\n    const { category, difficulty, type } = this.state;\n    const INDEX_ADJUSTMENT = 8;\n    return (\n      <>\n        <select\n          name=\"category\"\n          value={ category }\n          onChange={ this.handleChange }\n          className=\"form-control select mb-3 fw-bold\"\n        >\n          { categories.map((cat, index) => (\n            <Option\n              key={ index }\n              value={ (index === 0) ? 0 : index + INDEX_ADJUSTMENT }\n              name=\"category\"\n              text={ cat }\n            />\n          )) }\n        </select>\n        <select\n          name=\"difficulty\"\n          value={ difficulty }\n          onChange={ this.handleChange }\n          className=\"form-control select mb-3 fw-bold\"\n        >\n          { difficulties.map((dif, index) => (\n            <Option\n              key={ index }\n              value={ dif.value }\n              name=\"difficulty\"\n              text={ dif.text }\n            />\n          ))}\n        </select>\n        <select\n          name=\"type\"\n          value={ type }\n          onChange={ this.handleChange }\n          className=\"form-control select mb-4 fw-bold\"\n        >\n          {\n            types.map((item, index) => (\n              <Option key={ index } value={ item.value } name=\"type\" text={ item.text } />\n            ))\n          }\n        </select>\n      </>);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1\n          className=\"text-center fw-bold mb-4 title\"\n          data-testid=\"settings-title\"\n        >\n          Configurações\n        </h1>\n        { this.renderSelects() }\n        <Link to=\"/\" onClick={ this.handleClick } className=\"btn btn-config fw-bold\">\n          Salvar Configurações\n        </Link>\n      </div>\n    );\n  }\n}\n\nConfiguracoes.propTypes = {\n  dispatchConfigs: PropTypes.func.isRequired,\n\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchConfigs: (configs) => dispatch(setConfigs(configs)),\n});\n\nexport default connect(null, mapDispatchToProps)(Configuracoes);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport JogoHeader from '../components/JogoHeader';\nimport './login.css';\n\nclass Feedback extends React.Component {\n  render() {\n    const storedState = localStorage.getItem('state');\n    const state = JSON.parse(storedState);\n    const { player: { assertions, score } } = state;\n    const MINIMUN_ASSERTIONS = 3;\n    return (\n      <div d-flex flex-column justify-content-center>\n        <JogoHeader score={ score } />\n        <div\n          className=\"d-flex flex-column justify-content-center rounded form text-center\"\n        >\n          <h3\n            data-testid=\"feedback-text\"\n            className=\"text-uppercase text-white mb-5\"\n          >\n            { (assertions >= MINIMUN_ASSERTIONS) ? 'Mandou bem!' : 'Podia ser melhor...' }\n          </h3>\n          <p className=\"text-uppercase text-white\">\n            Você acertou\n            { ' ' }\n            <span data-testid=\"feedback-total-question\">{ assertions }</span>\n            { assertions === 1 ? ' questão' : ' questões' }\n          </p>\n          <p className=\"text-uppercase text-white mb-5\">\n            Um total de\n            { ' ' }\n            <span data-testid=\"feedback-total-score\">{ score }</span>\n            { ' ' }\n            pontos.\n          </p>\n\n          <Link\n            data-testid=\"btn-ranking\"\n            to=\"/ranking\"\n            className=\"text-uppercase btn btn-config fw-bold mb-3\"\n          >\n            Ver Ranking\n          </Link>\n          <Link\n            data-testid=\"btn-play-again\"\n            to=\"/\"\n            className=\"text-uppercase btn btn-play rounded fw-bold mb-3\"\n          >\n            Jogar novamente\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './ranking.css';\n\nclass Ranking extends React.Component {\n  renderRankingList() {\n    const rankingStore = localStorage.getItem('ranking');\n    const ranking = JSON.parse(rankingStore);\n    const sortedRanking = ranking.sort((a, b) => b.score - a.score);\n    return (\n      <ol className=\"list-group mb-5 ranking-list\">\n        {\n          sortedRanking.map((player, index) => (\n            <li\n              key={ index }\n              className=\"ranking-item\n                list-group-item\n                d-flex justify-content-between align-items-center text-white fw-bold\n                mb-3 rounded\"\n            >\n              <div\n                className=\"player-image-name\n                d-flex justify-content-between align-items-center\"\n              >\n                <img\n                  src={ player.picture }\n                  alt={ `${player.name} Avatar` }\n                  data-testid=\"header-profile-picture\"\n                />\n                { ' ' }\n                <span data-testid={ `player-name-${index}` }>{ player.name }</span>\n              </div>\n              <div className=\"player-score\">\n                <span>{ ' Pontos: ' }</span>\n                <span\n                  className=\"player-score-span text-end\"\n                  data-testid={ `player-score-${index}` }\n                >\n                  { player.score }\n                </span>\n              </div>\n            </li>\n          ))\n        }\n      </ol>\n    );\n  }\n\n  render() {\n    return (\n      <div\n        className=\"text-center\n        d-flex flex-column justify-content-center rounded ranking\"\n      >\n        <h1\n          data-testid=\"ranking-title\"\n          className=\"text-uppercase text-white fw-bold mb-5\"\n        >\n          Ranking\n        </h1>\n        { this.renderRankingList() }\n        <Link\n          data-testid=\"btn-go-home\"\n          to=\"/\"\n          className=\"text-uppercase btn btn-play rounded fw-bold\"\n        >\n          Voltar Início\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Ranking;\n","import React from 'react';\nimport trybeLogo from '../images/trybeLogo.png';\nimport './devs.css';\n\nclass Devs extends React.Component {\n  renderArthur() {\n    return (\n      <div className=\"dev d-flex flex-column align-items-center\">\n        <h2>Arthur Goulart</h2>\n        <img className=\"dev-image mb-3 mt-3\" src=\"https://ca.slack-edge.com/TMDDFEPFU-U020DAPT0BY-cc19e70522ca-512\" alt=\"arthur\" />\n        <a className=\"btn btn-info fw-bold mb-3\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/arthur-migotto-goulart/\">\n          LinkedIn\n        </a>\n        <a className=\"git-btn btn btn-dark fw-bold\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/ArthurMGoulart\">\n          GitHub\n        </a>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <main className=\"dev-page text-center\">\n        <img className=\"trybe-logo mt-3\" src={ trybeLogo } alt=\"trybe\" />\n        <div className=\"devs-box d-flex flex-collumn mt-5\">\n          {this.renderArthur()}\n          <div className=\"dev d-flex flex-column align-items-center\">\n            <h2>João Vieira</h2>\n            <img className=\"dev-image mb-3 mt-3\" src=\"https://ca.slack-edge.com/TMDDFEPFU-U01T5D9TGTE-c23adfbfaccd-512\" alt=\"João\" />\n            <a className=\"btn btn-info fw-bold mb-3\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/joao-francisco-da-silva-vieira-a8864972\">\n              LinkedIn\n            </a>\n            <a className=\"git-btn btn btn-dark fw-bold\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/jonnyvieirausa\">\n              GitHub\n            </a>\n          </div>\n          <div className=\"dev d-flex flex-column align-items-center\">\n            <h2>Júlia Baptista</h2>\n            <img className=\"dev-image mb-3 mt-3\" src=\"https://ca.slack-edge.com/TMDDFEPFU-U0219TMN0M6-1c25db3bcf15-512\" alt=\"Júlia\" />\n            <a className=\"btn btn-info fw-bold mb-3\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/juliabaptista/\">\n              LinkedIn\n            </a>\n            <a className=\"git-btn btn btn-dark fw-bold\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/jonnyvieirausa\">\n              GitHub\n            </a>\n          </div>\n          <div className=\"dev-special d-flex flex-column align-items-center\">\n            <h2>Tatiane Chiarello</h2>\n            <img className=\"dev-image mb-3 mt-3\" src=\"https://ca.slack-edge.com/TMDDFEPFU-U0205AMTZ55-1ddf110f5b05-512\" alt=\"Tatiane\" />\n            <a className=\"btn btn-info fw-bold mb-3\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/tatiane-chiarello/\">\n              LinkedIn\n            </a>\n            <a className=\"git-btn btn btn-dark fw-bold\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/jonnyvieirausa\">\n              GitHub\n            </a>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Devs;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Switch, Route } from 'react-router';\nimport Login from './pages/Login';\nimport Jogo from './pages/Jogo';\nimport Configuracoes from './pages/Configuracoes';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\nimport Devs from './pages/Devs';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"background d-flex justify-content-center align-items-center\">\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route path=\"/jogo\" component={ Jogo } />\n        <Route path=\"/configuracoes\" component={ Configuracoes } />\n        <Route path=\"/feedback\" component={ Feedback } />\n        <Route path=\"/ranking\" component={ Ranking } />\n        <Route path=\"/devs\" component={ Devs } />\n      </Switch>\n    </div>\n  );\n}\n"],"sourceRoot":""}